---
import { MarkdownInstance } from "astro";
import { PartFrontmatter } from "~/components/layouts/PartLayout.astro";
import "~/styles/index.css";

const { site } = Astro;
const title = "AI Safety";
const image = new URL("social.jpg", site);
const description = "Let's solve alignment.";
const pages = await Astro.glob<PartFrontmatter>("./**/index.md");

let chapterIndex = 1;

const parts = pages
  .filter((page) => page.url.split("/").length === 2)
  .map((part) => ({
    ...part,
    chapters: pages
      .filter((page) => page.url.startsWith(part.url) && page.url !== part.url)
      .map((chapter) => ({
        ...chapter,
        index: chapterIndex++,
      })),
  }));
---

<html lang="en" class="h-full motion-safe:scroll-smooth" data-theme="dark">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" href="/favicon.ico" sizes="any" />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />

    <title>{title}</title>
    <meta name="description" content={description} />

    <!-- fonts -->
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      rel="preload"
      as="style"
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;800&display=swap"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;800&display=swap"
      media="print"
      onload="this.media='all'"
    />

    <!-- social media -->
    <meta property="og:title" content={title} />
    <meta property="og:type" content="website" />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />
    <meta property="og:url" content={site} />
    <meta name="twitter:card" content="summary_large_image" />

    <!-- initialize theme -->
    <script is:inline>
      const themeSaved = localStorage.getItem("theme");

      if (themeSaved) {
        document.documentElement.dataset.theme = themeSaved;
      } else {
        const prefersDark = window.matchMedia(
          "(prefers-color-scheme: dark)"
        ).matches;
        document.documentElement.dataset.theme = prefersDark ? "dark" : "light";
      }

      window
        .matchMedia("(prefers-color-scheme: dark)")
        .addEventListener("change", (event) => {
          if (!localStorage.getItem("theme")) {
            document.documentElement.dataset.theme = event.matches
              ? "dark"
              : "light";
          }
        });
    </script>
  </head>
  <body class="h-full overflow-x-hidden">
    <main class="max-w-screen-md mx-auto p-2 md:p-8">
      <h1 class="text-4xl font-bold">AI Safety Course</h1>
      <hr class="my-4" />
      <div class="flex flex-col gap-4">
        {
          parts.map((part, partIndex) => (
            <section class="py-2">
              <h2 class="text-xl font-bold pb-2">
                {!!partIndex && `Part ${partIndex}.`} {part.frontmatter.title}
              </h2>
              {part.chapters.map((chapter) => (
                <a href={chapter.url} class="block py-1 text-md font-bold">
                  <div class="inline-block w-6">{chapter.index}</div>
                  {chapter.frontmatter.title}
                </a>
              ))}
            </section>
          ))
        }
      </div>
    </main>
  </body>
</html>
