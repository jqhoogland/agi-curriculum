---
import { getGithubURL } from "~/utils/urls";
import ByLine from "../ByLine.astro";
import BaseLayout from "./BaseLayout.astro";
import { PartFrontmatter } from "./PartLayout.astro";
import { GITHUB_NEW_ISSUE_URL } from "~/data/constants";
import { createBibTex, getCitations } from "~/utils/citations";
import Code from "../Code.astro";
import Part from "../Part.astro";
import Icon from "astro-icon";

export interface ChapterFrontmatter {
    title: string;
    description: string;
    authors?: Record<string, string>[];
    affiliations?: Record<string, string>[];
    published?: boolean;
    lastUpdated?: string;
}

const { frontmatter, url } = Astro.props;
const parentUrl = url.split("/").slice(0, 2).join("/");

let chapterIndex = 1;

const pages = await Astro.glob<PartFrontmatter>("../../pages/**/index.md");
const parts = pages
    .filter((page) => page.url.split("/").length === 2)
    .map((part, partIndex) => ({
        ...part,
        index: partIndex,
        chapters: pages
            .filter(
                (page) => page.url.startsWith(part.url) && page.url !== part.url
            )
            .map((chapter) => ({
                ...chapter,
                index: chapterIndex++,
            })),
    }));

const allChapters = parts.flatMap((part) => part.chapters);

const part = parts.find((part) => part.url.startsWith(parentUrl));

const thisChapter = part.chapters.find((chapter) => chapter.url === url);

const thisChapterIndex = thisChapter.index;

const authors: { name: string; url: string }[] = (
    frontmatter.authors ?? []
).map((author) => ({
    name: Object.keys(author)[0],
    url: Object.values(author)[0],
}));

const affiliations: { name: string; url: string }[] = (
    frontmatter.affiliations ?? []
).map((affiliation) => ({
    name: Object.keys(affiliation)[0],
    url: Object.values(affiliation)[0],
}));

const prev = thisChapterIndex > 1 ? allChapters[thisChapterIndex - 2] : null;
const next =
    thisChapterIndex < allChapters.length
        ? allChapters[thisChapterIndex]
        : null;

const references = getCitations(thisChapter.rawContent());
console.log({ references });
---

<BaseLayout>
    <div class="container">
        <nav class="flex pb-4">
            {
                prev?.frontmatter?.published ? (
                    <a href={prev.url} class="w-6 h-6 md:-ml-6">
                        <Icon name="ic:outline-chevron-left" />
                    </a>
                ) : (
                    <div />
                )
            }
            <div>
                <a class="font-bold text-sm" href="/">Aligning AI</a> :
                <a class="font-bold text-sm" href={part.url}
                    >{part.frontmatter?.title}</a
                >
            </div>
            {
                next?.frontmatter?.published ? (
                    <a href={next.url} class="w-6 h-6">
                        <Icon name="ic:outline-chevron-right" />
                    </a>
                ) : (
                    <div />
                )
            }
        </nav>
        <h1 class="text-4xl font-bold flex-1">
            {thisChapterIndex}
            {frontmatter.title}
        </h1>
    </div>
    <ByLine
        authors={authors}
        affiliations={affiliations}
        lastUpdated={frontmatter.lastUpdated}
        url={url}
    />
    <div class="container">
        <article class="prose">
            <slot />
        </article>
    </div>
    <hr />
    <section class="container flex flex-wrap justify-between gap-4">
        {
            prev?.frontmatter?.published ? (
                <div>
                    <h3 class="font-bold">Previous:</h3>
                    <a href={prev.url}>{prev.frontmatter?.title}</a>
                </div>
            ) : (
                <div />
            )
        }
        {
            next?.frontmatter?.published ? (
                <div>
                    <h3 class="font-bold">Next:</h3>
                    <a href={next.url}>{next.frontmatter?.title}</a>
                </div>
            ) : (
                <div />
            )
        }
    </section>
    <hr />
    <section class="container">
        <div class="prose prose-sm text-zinc-500">
            {
                frontmatter.acknowledgments && (
                    <div>
                        <h3>Acknowledgments</h3>
                        <p>{frontmatter.acknowledgments}</p>
                    </div>
                )
            }

            <div>
                <h3>References</h3>
                <ul>
                    {references.map((reference) => <li set:html={reference} />)}
                </ul>
            </div>
            <div>
                <h3>Updates & Corrections</h3>
                <p>
                    If you see any mistakes or want to suggest improvements,
                    please <a href={GITHUB_NEW_ISSUE_URL}
                        >create an issue on GitHub</a
                    >
                </p>
            </div>
            <div>
                <h3>Reuse</h3>
                <p>
                    Figures and text are available under a Creative Commons
                    license (<a
                        href="https://creativecommons.org/licenses/by/4.0/"
                        >CC-BY 4.0</a
                    >) unless otherwise mentioned. The source is <a
                        href={getGithubURL(url)}>available on GitHub</a
                    >. Figures taken from other sources (as mentioned in the
                    captions by "Figure from...") are not available under this
                    license.
                </p>
            </div>
            <div>
                <h3>Citation</h3>
                <Code
                    value={createBibTex({
                        title: frontmatter.title,
                        authors,
                        url,
                        lastUpdated: frontmatter.lastUpdated,
                    })}
                />
            </div>
        </div>
    </section>
    <hr />
    <footer class="container">
        <a href={getGithubURL(url)}>Github</a>
    </footer>
</BaseLayout>
