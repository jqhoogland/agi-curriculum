---
import { MarkdownInstance } from "astro";
import { PartFrontmatter } from "~/components/layouts/PartLayout.astro";
import "~/styles/index.css";

const { site } = Astro;
const title = "AI Safety";
const image = new URL("social.jpg", site);
const description = "Let's solve alignment.";
---

<html lang="en" class="h-full motion-safe:scroll-smooth" data-theme="dark">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" href="/favicon.ico" sizes="any" />
        <link rel="icon" href="/favicon.svg" type="image/svg+xml" />

        <title>{title}</title>
        <meta name="description" content={description} />

        <!-- fonts -->
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            rel="preload"
            as="style"
            href="https://fonts.googleapis.com/css2?family=Inter:wght@400;800&display=swap"
        />
        <link
            rel="stylesheet"
            href="https://fonts.googleapis.com/css2?family=Inter:wght@400;800&display=swap"
            media="print"
            onload="this.media='all'"
        />

        <!-- Math -->
        <link
            rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/katex.min.css"
            integrity="sha384-Xi8rHCmBmhbuyyhbI88391ZKP2dmfnOl4rT9ZfRI7mLTdk1wblIUnrIq35nqwEvC"
            crossorigin="anonymous"
        />
        <script
            type="module"
            src="https://cdn.jsdelivr.net/npm/katex@0.16.3/dist/contrib/copy-tex.mjs"
            integrity="sha384-bVEnwt0PtX+1EuJoOEcm4rgTUWvb2ILTdjHfI1gUe/r5fdqrTcQaUuRdHG2DciuQ"
            crossorigin="anonymous"
        ></script>

        <!-- social media -->
        <meta property="og:title" content={title} />
        <meta property="og:type" content="website" />
        <meta property="og:description" content={description} />
        <meta property="og:image" content={image} />
        <meta property="og:url" content={site} />
        <meta name="twitter:card" content="summary_large_image" />

        <!-- initialize theme -->
        <script is:inline>
            const themeSaved = localStorage.getItem("theme");

            if (themeSaved) {
                document.documentElement.dataset.theme = themeSaved;
            } else {
                const prefersDark = window.matchMedia(
                    "(prefers-color-scheme: dark)"
                ).matches;
                document.documentElement.dataset.theme = prefersDark
                    ? "dark"
                    : "light";
            }

            window
                .matchMedia("(prefers-color-scheme: dark)")
                .addEventListener("change", (event) => {
                    if (!localStorage.getItem("theme")) {
                        document.documentElement.dataset.theme = event.matches
                            ? "dark"
                            : "light";
                    }
                });
        </script>
    </head>
    <body class="h-full overflow-x-hidden">
        <slot />
    </body>
    <footer>
        <script>
            import tippy from "tippy.js";

            // Footnotes
            const footnotes = document.querySelectorAll(
                'a[aria-describedby="footnote-label"]'
            );
            footnotes.forEach((footnote) => {
                const footnoteId = footnote
                    .getAttribute("href")
                    .replace("#", "");

                const footnoteText =
                    document.getElementById(footnoteId).innerHTML;

                const footnoteContent = `<div class="hover-card">${footnoteText}</div>`;

                tippy(`#${footnote.id}`, {
                    content: footnoteContent,
                    theme: "light",
                    allowHTML: true,
                    interactive: true,
                    appendTo: () => document.body,
                });
            });

            const references = document.querySelectorAll("a.csl-cite");

            references.forEach((reference) => {
                const refId = reference.getAttribute("href").replace("#", "");
                const bibItem = document.getElementById(refId).innerHTML;
                const referenceContent = `<div class="hover-card">${bibItem}</div>`;
                const backRefId = reference.children[0].id;

                tippy(`#${backRefId}`, {
                    content: referenceContent,
                    theme: "light",
                    allowHTML: true,
                    interactive: true,
                    appendTo: () => document.body,
                });
            });
        </script>
    </footer>
</html>
